-- First Task
CREATE TABLE EMP_TEST(
    NAME VARCHAR(255)
);

SELECT TRIM(NAME) FROM EMP_TEST;

SELECT LTRIM(NAME) FROM EMP_TEST;

SELECT RTRIM(NAME) FROM EMP_TEST;

SELECT LTRIM(RTRIM('*#AND THIS IS ORACLE*', '*#'),'*#') FROM DUAL;

-- Second Task
SELECT REPLACE('database','a','@') FROM DUAL;

SELECT REPLACE('old school','old','new') FROM DUAL;

CREATE TABLE PRODUCT(
    NAME VARCHAR(255)
);

INSERT INTO PRODUCT
VALUES('CHEESE') ;

INSERT INTO PRODUCT
VALUES('APPLE') ;

INSERT INTO PRODUCT
VALUES('BANANA') ;

SELECT LPAD(NAME,15,'*') FROM PRODUCT;

SELECT  RPAD(NAME,15,'#') FROM PRODUCT;

-- Third Task
SELECT SYSDATE, TO_CHAR(SYSDATE,'DD-MON-YYYY') "FORMATE DATE" FROM DUAL;

SELECT SYSDATE, TO_CHAR(SYSDATE,'Month YYYY') "FORMATED DATE" FROM DUAL;

SELECT TO_CHAR(19800.55,'99,999.99') "FORMATED NUMBER" FROM DUAL;

SELECT TO_CHAR(2800,'$99,999') FROM DUAL;

-- Fourth Task
CREATE TABLE STUDENT(
    NAME VARCHAR(255),
    MARKS NUMBER
);

INSERT INTO STUDENT
VALUES ('ALI',78);

INSERT INTO STUDENT
VALUES ('AHMED',60);

INSERT INTO STUDENT
VALUES ('SALMA',52);

INSERT INTO STUDENT
VALUES ('SHAHD',88);

INSERT INTO STUDENT
VALUES ('MOHAMED',93);

SELECT NAME, MARKS, CASE
    WHEN MARKS >= 90 THEN 'A'
    WHEN MARKS >= 80 THEN 'B'
    WHEN MARKS >= 70 THEN 'C'
    ELSE 'F'
    END AS DEGREES
FROM STUDENT;

-- Fifth Task
SELECT NAME, MARKS,
       DECODE(TRUNC(MARKS/10),
              9,'A',
              8,'B',
              7,'C',
              'F') AS DEGREES
FROM STUDENT;

CREATE TABLE ORDERS(
    STATUS CHAR
);

INSERT INTO ORDERS
VALUES ('P');

INSERT INTO ORDERS
VALUES ('S');

INSERT INTO ORDERS
VALUES ('D');

SELECT STATUS, DECODE(STATUS,
                      'P','PENDING',
                      'S','SHIPPED',
                      'D','DELEVERED',
                      'INVALID') AS FULL_STATUS
FROM ORDERS;

-- Sixth Task (same of fifth)

-- Seventh Task (repeated)

-- Eighth Task
SELECT AVG(SALARY) FROM EMPLOYEES;

SELECT COUNT(*) FROM EMPLOYEES;

SELECT MAX(SALARY) FROM EMPLOYEES;

SELECT MIN(SALARY) FROM EMPLOYEES;

SELECT SUM(SALARY) FROM EMPLOYEES;

SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES
                                  GROUP BY DEPARTMENT_ID;

SELECT JOB_ID, COUNT(*) FROM EMPLOYEES
                        GROUP BY JOB_ID;

SELECT AVG(COMMISSION_PCT) FROM EMPLOYEES;

SELECT COUNT(*) FROM EMPLOYEES
                WHERE SALARY > 10000;

SELECT JOB_ID, MIN(SALARY), MAX(SALARY) FROM EMPLOYEES
                                        GROUP BY JOB_ID;

SELECT MANAGER_ID, SUM(SALARY) FROM EMPLOYEES
                               WHERE MANAGER_ID IS NOT NULL
                               GROUP BY MANAGER_ID;

SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY) FROM EMPLOYEES
                                          GROUP BY DEPARTMENT_ID, JOB_ID;

SELECT DEPARTMENT_ID, COUNT(*) AS TOTAL_EMPLOYEE, AVG(salary) AS AVG_SALARY, MAX(salary) AS MAX_SALARY, MIN(salary) AS MIN_SALARY FROM EMPLOYEES
                                                                                                                                  GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, SUM(SALARY) AS TOTAL_SALARY, AVG(salary) AS AVG_SALARY FROM EMPLOYEES
                                                                                 GROUP BY DEPARTMENT_ID;